{"remainingRequest":"/home/jaalorsa/Proyectos/softka/juego_de_carros_por_consola_-_grupo_b/carros_js/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaalorsa/Proyectos/softka/juego_de_carros_por_consola_-_grupo_b/carros_js/src/views/Juego.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/home/jaalorsa/Proyectos/softka/juego_de_carros_por_consola_-_grupo_b/carros_js/src/views/Juego.vue","mtime":1619060566077},{"path":"/home/jaalorsa/Proyectos/softka/juego_de_carros_por_consola_-_grupo_b/carros_js/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaalorsa/Proyectos/softka/juego_de_carros_por_consola_-_grupo_b/carros_js/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jaalorsa/Proyectos/softka/juego_de_carros_por_consola_-_grupo_b/carros_js/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jaalorsa/Proyectos/softka/juego_de_carros_por_consola_-_grupo_b/carros_js/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/jaalorsa/Proyectos/softka/juego_de_carros_por_consola_-_grupo_b/carros_js/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaalorsa/Proyectos/softka/juego_de_carros_por_consola_-_grupo_b/carros_js/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5qdWVnbwogIC5qdWVnby1jb250YWluZXIKICAgIHdpZHRoICA5NXZ3CiAgICBoZWlnaHQgYXV0bwogICAgcG9zaXRpb24gcmVsYXRpdmUKICAucGlzdGEKICAgIHdpZHRoIDEwMCUKICAgIGhlaWdodCBhdXRvCiAgICBwb3NpdGlvbiByZWxhdGl2ZQogIC5jYXJyaWwKICAgIHdpZHRoIDEwMCUKICAgIG1hcmdpbiAxNXB4IDAKICAgIGRpc3BsYXkgZmxleAogICAgYmFja2dyb3VuZC1jb2xvciBncmVlbgogIC5jYXJybwogICAgd2lkdGggIDUwcHgKICAgIGhlaWdodCA1MHB4CgogIC5pbmZvLWNvbnRhaW5lcgogICAgd2lkdGggIDk1dncKICAgIGhlaWdodCAyNXZoCiAgICBvdmVyZmxvdyBhdXRvCg=="},{"version":3,"sources":["Juego.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Juego.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"pug\">\n  section.juego\n    h1 Carreras de autos\n    .juego-container\n      .pista\n        .carril(\n          v-for=\"carril,index in getConductores\"\n          :key=\"index\"\n        )\n          img.carro(\n            :src=\"getPokemons[index].img\" \n            :alt=\"getPokemons[index].name\"\n            :style=\"stylesCarro[index]\"\n            ref=\"carro\"\n            )\n      button(@click=\"onThrow\") Jugar\n    h2 Registros\n    .info-container(ref=\"log\")\n</template>\n\n<script>\nimport getNumberRandom from \"@/utils/random\";\nimport Juego from \"@/models/Juego\";\nimport Pista from \"@/models/Pista\";\nimport Carro from \"@/models/Carro\";\nimport Conductor from \"@/models/Conductor\";\nimport Jugador from \"@/models/Jugador\";\nimport Carril from \"@/models/Carril\";\n\nexport default {\n  data: function() {\n    return {\n      juego: undefined,\n      currentJugador: 0,\n      position: 1,\n      resultDado: 0,\n      showModal: false,\n      stylesCarro: [\n        { \"margin-left\": \"0\" },\n        { \"margin-left\": \"0\" },\n        { \"margin-left\": \"0\" },\n        { \"margin-left\": \"0\" },\n        { \"margin-left\": \"0\" }\n      ]\n    };\n  },\n  computed: {\n    getPokemons: function() {\n      return this.$store.state.pokemons;\n    },\n    getConductores: function() {\n      return this.juego.conductores;\n    },\n    getConductor: function() {\n      return this.getConductores[this.currentJugador];\n    },\n    getJugador: function() {\n      return this.getConductor.jugador;\n    },\n    getCarro: function() {\n      return this.getConductor.carro;\n    },\n    getAvance: function() {\n      return (\n        (this.getCarro.distancia * 100) / (this.getCarro.carril.longitud * 1000)\n      );\n    },\n    msgLog: function() {\n      if (this.getConductor.position === 0) {\n        return `Jugador ${this.getJugador.nombre} avanzó ${this.resultDado} metros`;\n      } else {\n        return `Jugador ${this.getJugador.nombre} terminó la carrera`;\n      }\n    }\n  },\n  watch: {\n    position: function(newValue) {\n      if (newValue > 5) {\n        this.$store.commit(\"setJuego\", this.juego);\n        this.$router.replace({ name: \"Podio\" });\n      }\n    }\n  },\n  methods: {\n    /**\n     * Método que se encarga del movimiento de los carros\n     */\n    onThrow: function() {\n      if (this.getConductor.position === 0) {\n        this.resultDado = this.getConductor.tirarDado() * 100;\n        this.getCarro.avanzar(this.resultDado);\n        this.newP();\n\n        if (\n          (this.getCarro.distancia / 1000 >= this.getCarro.carril.longitud) |\n          (this.getAvance + this.getCarro.distancia >=\n            this.getCarro.carril.longitud * 1000)\n        ) {\n          this.stylesCarro[this.currentJugador][\"margin-left\"] = `90%`;\n\n          if (this.position <= 5) {\n            this.getConductor.position = this.position;\n            this.position++;\n          }\n        } else {\n          this.stylesCarro[this.currentJugador][\n            \"margin-left\"\n          ] = `${this.getAvance}%`;\n        }\n      } else {\n        this.newP();\n      }\n\n      if (this.currentJugador < this.getConductores.length - 1) {\n        this.currentJugador++;\n      } else {\n        this.currentJugador = 0;\n      }\n    },\n    newP: function() {\n      //Crear un nuevo parrafo y se agrega al final del log\n      let log = document.createElement(\"p\");\n      log.appendChild(document.createTextNode(this.msgLog));\n      this.$refs.log.insertAdjacentElement(\"afterbegin\", log);\n      // this.$refs.log.appendChild(log);\n    }\n  },\n  /**\n   * Hook que inicializa todo el juego. Acá se instancia todas las clases de los modelos\n   */\n  created: function() {\n    //Crear jugadores humanos\n\n    const players = this.$store.state.players;\n    let jugadores = [];\n    for (let i = 0; i < players.length; i++) {\n      jugadores.push(new Jugador(i, players[i].name.toUpperCase(), \"humano\"));\n    }\n    //Crear jugadores maquina\n    for (let i = jugadores.length; i < 5; i++) {\n      jugadores.push(\n        new Jugador(i, this.getPokemons[i].name.toUpperCase(), \"maquina\")\n      );\n    }\n\n    //Pistas\n    const tracks = this.$store.getters.getTrack;\n    let aux = [];\n    switch (tracks) {\n      case \"Corta\":\n        //Id = 1, Nombre pista = Corta, longitud 1Km\n        aux = [1, \"Corta\", 1];\n        break;\n      case \"Larga\":\n        //Id = 2, Nombre pista = Larga, longitud 10Km\n        aux = [2, \"Larga\", 10];\n        break;\n    }\n\n    const pistas = [new Pista(aux[0], aux[1], aux[2])];\n\n    //Crear carriles, carros y conductores\n    let conductores = [];\n\n    for (let i = 0; i < jugadores.length; i++) {\n      let carril = new Carril(pistas[0].limite);\n      pistas[0].addCarril(carril);\n      let carro = new Carro(carril);\n      conductores.push(new Conductor(jugadores[i], carro));\n    }\n\n    let idGame = getNumberRandom(10000000, 1000000);\n    let juego = new Juego(idGame);\n    juego.pistas = pistas;\n    juego.conductores = conductores;\n    this.juego = juego;\n  }\n};\n</script>\n\n<style lang=\"stylus\">\n.juego\n  .juego-container\n    width  95vw\n    height auto\n    position relative\n  .pista\n    width 100%\n    height auto\n    position relative\n  .carril\n    width 100%\n    margin 15px 0\n    display flex\n    background-color green\n  .carro\n    width  50px\n    height 50px\n\n  .info-container\n    width  95vw\n    height 25vh\n    overflow auto\n</style>\n"]}]}